if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }
    if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }
    if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }
    if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }
    if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }if (prev_node != current_node) {
        mem->ram[prev_node]->next = current_node;
        prev_node = current_node;
    }